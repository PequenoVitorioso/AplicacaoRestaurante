package view;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.*;
import controller.*;
import java.text.ParseException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pichau
 */
public class CaixaView extends javax.swing.JFrame {
    private ArrayList<ClienteModel> listaClientes;
    //private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CaixaView.class.getName());

    /**
     * Creates new form CaixaView
     */
    public CaixaView() {
        initComponents();
        preencherTabela();
        inicializa();
        preencherCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jifCaixa = new javax.swing.JInternalFrame();
        jpCaixa = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbCaixa = new javax.swing.JTable();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();
        jlNotaFiscal = new javax.swing.JLabel();
        jlValorTotal = new javax.swing.JLabel();
        jlData = new javax.swing.JLabel();
        jlFormPagamento = new javax.swing.JLabel();
        jtxData = new javax.swing.JTextField();
        jtxValorTotal = new javax.swing.JTextField();
        jtxNotaFiscal = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jcbFormPagamento = new javax.swing.JComboBox<>();
        jlCliente = new javax.swing.JLabel();
        jcbCliente = new javax.swing.JComboBox<>();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jifCaixa.setVisible(true);

        javax.swing.GroupLayout jifCaixaLayout = new javax.swing.GroupLayout(jifCaixa.getContentPane());
        jifCaixa.getContentPane().setLayout(jifCaixaLayout);
        jifCaixaLayout.setHorizontalGroup(
            jifCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jifCaixaLayout.setVerticalGroup(
            jifCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jtbCaixa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Nota Fiscal", "Valor Total", "Data", "Forma de Pagamento"
            }
        ));
        jScrollPane1.setViewportView(jtbCaixa);

        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbFechar.setText("Fechar");
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        jlNotaFiscal.setText("Nota fiscal:");

        jlValorTotal.setText("Valor Total:");

        jlData.setText("Data:");

        jlFormPagamento.setText("Forma de Pagamento");

        jbPesquisar.setText("Pesquisar");

        jcbFormPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cartão de Crédito", "Cartão de Débito", "Dinheiro", "Pix" }));

        jlCliente.setText("Cliente:");

        javax.swing.GroupLayout jpCaixaLayout = new javax.swing.GroupLayout(jpCaixa);
        jpCaixa.setLayout(jpCaixaLayout);
        jpCaixaLayout.setHorizontalGroup(
            jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCaixaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
            .addGroup(jpCaixaLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCaixaLayout.createSequentialGroup()
                        .addComponent(jbNovo)
                        .addGap(18, 18, 18)
                        .addComponent(jbSalvar)
                        .addGap(18, 18, 18)
                        .addComponent(jbEditar)
                        .addGap(18, 18, 18)
                        .addComponent(jbExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(jbFechar))
                    .addGroup(jpCaixaLayout.createSequentialGroup()
                        .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jlData)
                                .addComponent(jlValorTotal, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jlNotaFiscal, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jlCliente))
                        .addGap(18, 18, 18)
                        .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpCaixaLayout.createSequentialGroup()
                                .addComponent(jtxNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbPesquisar))
                            .addGroup(jpCaixaLayout.createSequentialGroup()
                                .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpCaixaLayout.createSequentialGroup()
                                        .addComponent(jtxValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jlFormPagamento))
                                    .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbFormPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtxData, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jpCaixaLayout.setVerticalGroup(
            jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCaixaLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNotaFiscal)
                    .addComponent(jtxNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addGap(23, 23, 23)
                .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlValorTotal)
                    .addComponent(jtxValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlFormPagamento)
                    .addComponent(jcbFormPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlData))
                .addGap(18, 18, 18)
                .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCliente)
                    .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jpCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo)
                    .addComponent(jbSalvar)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluir)
                    .addComponent(jbFechar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jifCaixa)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jifCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        jbPesquisar.setEnabled(false);
        jbNovo.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbSalvar.setEnabled(true);
        jtxNotaFiscal.setEditable(false);
        jtxValorTotal.setEditable(true);
        jtxData.setEditable(true);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        if((jtxValorTotal.getText().isEmpty())||(jtxData.getText().isEmpty()))
            JOptionPane.showMessageDialog(this, "Digite todos os campos!"
                    , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        else{          
            float valor  = Float.parseFloat(jtxValorTotal.getText());
            String clien = (String) jcbCliente.getSelectedItem();
            int cliente = 0;
            for(int i=0; i< listaClientes.size();i++){
                if(clien.equals(listaClientes.get(i).getNome())){
                    cliente = listaClientes.get(i).getCodCliente();
                    break;
                }
            }
            String formPagamento = (String) jcbFormPagamento.getSelectedItem();
            CaixaModel caixa = new CaixaModel();
            String dataString = jtxData.getText();
            SimpleDateFormat sdfEntrada = new SimpleDateFormat("dd/MM/yyyy");
            try {
                caixa.setData(sdfEntrada.parse(dataString));
            } catch (ParseException ex) {
                System.out.println(ex.getMessage());
            }
            caixa.setValorTotal(valor);
            caixa.getCliente().setCodCliente(cliente);
            caixa.setFormPagamento(formPagamento);
            //CONTROLLER
            CaixaContoller controller = new CaixaContoller();
            if(controller.inserir(caixa)){
                JOptionPane.showMessageDialog(this, "Produto Inserido com sucesso!");
                limparCampos();
                inicializa();
                preencherTabela();
            }else
                JOptionPane.showMessageDialog(this, "Erro ao inserir a Nota Fiscal!"
                    , "Retorno BD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        int notaFiscal = Integer.parseInt(jtxNotaFiscal.getText());
        
        if((jtxData.getText().isEmpty())||(jtxValorTotal.getText().isEmpty()))
            JOptionPane.showMessageDialog(this, "Digite todos os campos!"
                    , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        else{ 
            float valor  = Float.parseFloat(jtxValorTotal.getText());
            String clien = (String) jcbCliente.getSelectedItem();
            int cliente = 0;
            for(int i=0; i< listaClientes.size();i++){
                if(clien.equals(listaClientes.get(i).getNome())){
                    cliente = listaClientes.get(i).getCodCliente();
                    break;
                }
            }
            String formPagamento = (String) jcbFormPagamento.getSelectedItem();
            CaixaModel caixa = new CaixaModel();
            String dataString = jtxData.getText();
            SimpleDateFormat sdfEntrada = new SimpleDateFormat("dd/MM/yyyy");
            try {
                caixa.setData(sdfEntrada.parse(dataString));
            } catch (ParseException ex) {
                System.out.println(ex.getMessage());
            }
            caixa.setValorTotal(valor);
            caixa.setFormPagamento(formPagamento);
            caixa.getCliente().setCodCliente(cliente);
            caixa.setNumNotaFiscal(notaFiscal);
            CaixaContoller controller = new CaixaContoller();
            if(controller.editar(caixa)){
                JOptionPane.showMessageDialog(this, "Produto Inserido com sucesso!");
                limparCampos();
                inicializa();
                preencherTabela();
            }else
                JOptionPane.showMessageDialog(this, "Erro ao inserir o Nota Fiscal!"
                    , "Retorno BD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        CaixaModel caixa = new CaixaModel();
        if(jtxNotaFiscal.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "Digite o código da Nota Fiscal!"
                    , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        else{
            caixa.setNumNotaFiscal(Integer.parseInt(jtxNotaFiscal.getText()));
            //CONTROLLER 
            CaixaContoller controller = new CaixaContoller();
            if(controller.excluir(caixa)){
                JOptionPane.showMessageDialog(this, "Excluído com sucesso!");
                limparCampos();
                inicializa();
                preencherTabela();
            }else 
                JOptionPane.showMessageDialog(this, "Erro ao Excluir!"
                    , "Retorno BD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        dispose();
    }//GEN-LAST:event_jbFecharActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private void preencherTabela(){
        CaixaContoller controller = new CaixaContoller();
        ArrayList<CaixaModel> lista = controller.selecionarTodos();
        DefaultTableModel modeloTabela = (DefaultTableModel) jtbCaixa.getModel();
        modeloTabela.setRowCount(0);
        if(lista.isEmpty())
            JOptionPane.showMessageDialog(this, "Nenhuma Nota Fiscal cadastrado!"
                    ,"Retorno Tela", JOptionPane.ERROR_MESSAGE);
        else{
            for(CaixaModel p: lista){
                modeloTabela.addRow(new String[]{
                    String.valueOf(p.getNumNotaFiscal()),
                    String.valueOf(p.getValorTotal()),
                    String.valueOf(p.getData()),
                    String.valueOf(p.getFormPagamento())
                });
            }
        }
    }
    
    private void inicializa(){
        jtxNotaFiscal.setEditable(true);
        jtxValorTotal.setEditable(false);
        jtxData.setEditable(false);
        jbSalvar.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbPesquisar.setEnabled(true);
        jbNovo.setEnabled(true);
    }
    private void limparCampos(){
        jtxNotaFiscal.setText("");
        jtxValorTotal.setText("");
        jtxData.setText("");
        jcbCliente.setSelectedIndex(0);
    }
    private void preencherCombo(){
        ClienteController controller = new ClienteController();
        listaClientes = controller.selecionarTodos();
        for(ClienteModel f: listaClientes)
            jcbCliente.addItem(f.getNome());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox<String> jcbCliente;
    private javax.swing.JComboBox<String> jcbFormPagamento;
    private javax.swing.JInternalFrame jifCaixa;
    private javax.swing.JLabel jlCliente;
    private javax.swing.JLabel jlData;
    private javax.swing.JLabel jlFormPagamento;
    private javax.swing.JLabel jlNotaFiscal;
    private javax.swing.JLabel jlValorTotal;
    private javax.swing.JPanel jpCaixa;
    private javax.swing.JTable jtbCaixa;
    private javax.swing.JTextField jtxData;
    private javax.swing.JTextField jtxNotaFiscal;
    private javax.swing.JTextField jtxValorTotal;
    // End of variables declaration//GEN-END:variables
}
