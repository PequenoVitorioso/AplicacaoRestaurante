package view;

import controller.ClienteController;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ClienteModel;

/**
 *
 * @author pichau
 */
public class ClienteView extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ClienteView.class.getName());

    /**
     * Creates new form ClienteView
     */
    private int linha = -1;
    public ClienteView() {
        initComponents();
        preencherTabela();
        inicializa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jpCliente = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtCliente = new javax.swing.JTable();
        jlCodigo = new javax.swing.JLabel();
        jlnumMesa = new javax.swing.JLabel();
        jtxCodCliente = new javax.swing.JTextField();
        jtxNumMesa = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jtxNome = new javax.swing.JTextField();
        jixCliente = new javax.swing.JInternalFrame();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código", "Número da mesa", "Numero da Mesa"
            }
        ));
        jtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtClienteMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtCliente);

        jlCodigo.setText("Código:");

        jlnumMesa.setText("Número da mesa:");

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbFechar.setText("Fechar");
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome:");

        javax.swing.GroupLayout jpClienteLayout = new javax.swing.GroupLayout(jpCliente);
        jpCliente.setLayout(jpClienteLayout);
        jpClienteLayout.setHorizontalGroup(
            jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpClienteLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jpClienteLayout.createSequentialGroup()
                            .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(jpClienteLayout.createSequentialGroup()
                                    .addComponent(jbNovo)
                                    .addGap(18, 18, 18)
                                    .addComponent(jbSalvar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbEditar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jbExcluir)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jbFechar)))
                            .addGap(27, 27, 27))
                        .addGroup(jpClienteLayout.createSequentialGroup()
                            .addComponent(jlCodigo)
                            .addGap(18, 18, 18)
                            .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jpClienteLayout.createSequentialGroup()
                                    .addComponent(jtxCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jbPesquisar))
                                .addComponent(jtxNome))
                            .addGap(218, 218, 218)))
                    .addGroup(jpClienteLayout.createSequentialGroup()
                        .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jpClienteLayout.createSequentialGroup()
                                .addComponent(jlnumMesa)
                                .addGap(18, 18, 18)
                                .addComponent(jtxNumMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(258, 258, 258))))
        );
        jpClienteLayout.setVerticalGroup(
            jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpClienteLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCodigo)
                    .addComponent(jtxCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addGap(25, 25, 25)
                .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlnumMesa)
                    .addComponent(jtxNumMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo)
                    .addComponent(jbSalvar)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluir)
                    .addComponent(jbFechar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jixCliente.setVisible(true);

        javax.swing.GroupLayout jixClienteLayout = new javax.swing.GroupLayout(jixCliente.getContentPane());
        jixCliente.getContentPane().setLayout(jixClienteLayout);
        jixClienteLayout.setHorizontalGroup(
            jixClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jixClienteLayout.setVerticalGroup(
            jixClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jixCliente))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jixCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        jbPesquisar.setEnabled(false);
        jbNovo.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbSalvar.setEnabled(true);
        jtxCodCliente.setEditable(false);
        jtxNome.setEditable(true);
        jtxNumMesa.setEditable(true);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        if((jtxNome.getText().isEmpty())||(jtxNumMesa.getText().isEmpty()))
            JOptionPane.showMessageDialog(this, "Digite todos os campos!"
                    , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        else{
            String nome = jtxNome.getText();
            int numMesa  = Integer.parseInt(jtxNumMesa.getText());
            //PASSAR PARAMETROS
            ClienteModel cliente = new ClienteModel();
            cliente.setNome(nome);
            cliente.setNumMesa(numMesa);
            //CONTROLLER
            ClienteController controller = new ClienteController();
            if(controller.inserir(cliente)){
                JOptionPane.showMessageDialog(this, "Cliente Inserida com sucesso!");
                limparCampos();
                inicializa();
                preencherTabela();
            }else
                JOptionPane.showMessageDialog(this, "Erro ao inserir Materia Prima!"
                    , "Retorno BD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        int codCliente = Integer.parseInt(jtxCodCliente.getText());
        
        if((jtxNome.getText().isEmpty())||(jtxNumMesa.getText().isEmpty()))
            JOptionPane.showMessageDialog(this, "Digite todos os campos!"
                    , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        else{
            String nome = jtxNome.getText();
            int numMesa  = Integer.parseInt(jtxNumMesa.getText());
            
            ClienteModel cliente = new ClienteModel();
            cliente.setCodCliente(codCliente);
            cliente.setNome(nome);
            cliente.setNumMesa(numMesa);
            //CONTROLLER
            ClienteController controller = new ClienteController();
            if(controller.editar(cliente)){
                JOptionPane.showMessageDialog(this, "Atualização com sucesso!");
                limparCampos();
                inicializa();
                preencherTabela();
            }else
                JOptionPane.showMessageDialog(this, "Erro ao editar Cliente!"
                    , "Retorno BD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        ClienteModel cliente = new ClienteModel();
        if(jtxCodCliente.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "Digite o código do Cliente!"
                    , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        else{
            cliente.setCodCliente(Integer.parseInt(jtxCodCliente.getText()));
            //CONTROLLER 
            ClienteController controller = new ClienteController();
            if(controller.excluir(cliente)){
                JOptionPane.showMessageDialog(this, "Excluído com sucesso!");
                limparCampos();
                inicializa();
                preencherTabela();
            }else 
                JOptionPane.showMessageDialog(this, "Erro ao Excluir!"
                    , "Retorno BD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        dispose();
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jtClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtClienteMouseClicked
        linha = jtCliente.getSelectedRow();
        if(linha !=-1){
            jtxCodCliente.setText(jtCliente.getValueAt(linha, 0).toString());
            jtxNome.setText(jtCliente.getValueAt(linha, 1).toString());
            jtxNumMesa.setText(jtCliente.getValueAt(linha, 2).toString());
            jbNovo.setEnabled(false);
            jbSalvar.setEnabled(false);
            jbEditar.setEnabled(true);
            jbExcluir.setEnabled(true);
            jtxCodCliente.setEditable(false);
            jtxNome.setEditable(true);
            jtxNumMesa.setEditable(true);            
            linha = -1;
        }
    }//GEN-LAST:event_jtClienteMouseClicked

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        ClienteModel cliente = new ClienteModel();
        if(jtxCodCliente.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "Preencha o código do produto!"
                    , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        else{
            cliente.setCodCliente(Integer.parseInt(jtxCodCliente.getText()));
            //CONTROLLER
            ClienteController controller = new ClienteController();
            cliente = controller.selecionar(cliente);
            //VALIDAR SE OBJETO FORNECEDOR FOI ENCONTRADO... 
            if(cliente == null)
                JOptionPane.showMessageDialog(this, "Produto não encontrado!"
                    , "Retorno BD", JOptionPane.ERROR_MESSAGE);
            else{
                //PREENCHER OS CAMPOS...
                jtxNome.setText(cliente.getNome());
                jtxNumMesa.setText(String.valueOf(cliente.getNumMesa()));
                jtxCodCliente.setText(String.valueOf(cliente.getCodCliente()));
                jbNovo.setEnabled(false);
                jbSalvar.setEnabled(false);
                jbEditar.setEnabled(true);
                jbExcluir.setEnabled(true);
                jtxCodCliente.setEditable(false);
                jtxNumMesa.setEditable(true);
                jtxNome.setEditable(true);
            }
        }
    }//GEN-LAST:event_jbPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private void preencherTabela(){
        ClienteController controller = new ClienteController();
        ArrayList<ClienteModel> lista = controller.selecionarTodos();
        DefaultTableModel modeloTabela = (DefaultTableModel) jtCliente.getModel();
        modeloTabela.setRowCount(0);
        if(lista.isEmpty())
            JOptionPane.showMessageDialog(this, "Nenhum Cliente cadastrado!"
                    ,"Retorno Tela", JOptionPane.ERROR_MESSAGE);
        else{
            
            for(ClienteModel f: lista){
                modeloTabela.addRow(new String[]{
                    String.valueOf(f.getCodCliente()),
                    String.valueOf(f.getNome()),
                    String.valueOf(f.getNumMesa())
                });
            }
        }
    }
    private void inicializa(){
        jtxCodCliente.setEditable(true);
        jtxNumMesa.setEditable(false);
        jtxNome.setEditable(false);
        jbSalvar.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbPesquisar.setEnabled(true);
        jbNovo.setEnabled(true);
    }
    private void limparCampos(){
        jtxNome.setText("");
        jtxCodCliente.setText("");
        jtxNumMesa.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JInternalFrame jixCliente;
    private javax.swing.JLabel jlCodigo;
    private javax.swing.JLabel jlnumMesa;
    private javax.swing.JPanel jpCliente;
    private javax.swing.JTable jtCliente;
    private javax.swing.JTextField jtxCodCliente;
    private javax.swing.JTextField jtxNome;
    private javax.swing.JTextField jtxNumMesa;
    // End of variables declaration//GEN-END:variables
}
